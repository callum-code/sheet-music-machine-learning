/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sheetmusic.noteidentifiertrainer;

import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import java.awt.BorderLayout;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author callumijohnston
 */
public class MenuFrame extends JFrame {

    /**
     * Creates new form MenuFrame
     */
    File imgFile;
    MatrixFrame firstLayer;
    boolean color;

    private javax.swing.JComboBox<String> SymbolType;
    private javax.swing.JButton analyzeButton;
    private javax.swing.JButton changeFileButton;
    private javax.swing.JButton extractCoorsButton;
    private javax.swing.JButton recognizeButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    
    public MenuFrame(File inputFile) {
        color = true;
        imgFile = inputFile;
        initComponents();
        setVisible(true);
        firstLayer = new MatrixFrame(imgFile);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        changeFileButton = new javax.swing.JButton();
        changeFileButton.setSize(100,30);
        analyzeButton = new javax.swing.JButton();
        analyzeButton.setSize(100,30);
        extractCoorsButton = new javax.swing.JButton();
        extractCoorsButton.setSize(100,30);
        recognizeButton = new javax.swing.JButton();
        recognizeButton.setSize(100,30);
        SymbolType = new javax.swing.JComboBox<>();

        setSize(250,230);
        setLayout(new BorderLayout());
        add(analyzeButton,BorderLayout.NORTH);
        add(extractCoorsButton,BorderLayout.NORTH);
        add(SymbolType,BorderLayout.CENTER);
        add(recognizeButton,BorderLayout.EAST);
        add(changeFileButton,BorderLayout.SOUTH);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Matrix Transformations");

        jLabel2.setText(" and Convolutions");

        changeFileButton.setText("Change File");
        changeFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeFileButtonActionPerformed(evt);
            }
        });

        analyzeButton.setText("Analyze");
        analyzeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                analyzeButtonActionPerformed(evt);
            }
        });

        extractCoorsButton.setText("Start Editor");
        extractCoorsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                extractCoorsButtonActionPerformed(evt);
            }
        });

        recognizeButton.setText("Recognize");
        recognizeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recognizeButtonActionPerformed(evt);
            }
        });

        SymbolType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"Note", "Accidental", "Rest", "Clef", "Time Signature"}));
        SymbolType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SymbolTypeActionPerformed(evt);
            }
        });

    }

    private void changeFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeFileButtonActionPerformed
        final JFileChooser fc = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter(
        "Image Files", "jpg", "gif", "png", "ttif");
        fc.setFileFilter(filter);
        File currentFile = new File("/Users/callumjohnston/dl4j-examples/dl4j-examples/dl4j-examples/dl4j-examples/Data/Sheets");
        fc.setCurrentDirectory(currentFile);
        JFrame dialogueFrame  = new JFrame();
        int val = fc.showOpenDialog(dialogueFrame);
        if (val ==0){
            imgFile = fc.getSelectedFile();
        }
        SymbolType.setSelectedIndex(0);
        firstLayer = new MatrixFrame(imgFile);
    }//GEN-LAST:event_changeFileButtonActionPerformed

    private void analyzeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_analyzeButtonActionPerformed
        firstLayer.analysis.analyzeHorizontalLines(true);
        System.out.println("Analysing Completed");
        firstLayer.analysis.extractIndividualLines();
        System.out.println("Line Extraction Completed");
        firstLayer.analysis.extractCoordinates();
        System.out.println("Coordinate Extraction Completed");
        firstLayer.analysis.staffIdentification();
        System.out.println("Staff Identification Completed");
        //firstLayer = new MatrixFrame(transformations.getSelectedItem().toString(), imgFile, color);
        firstLayer.analysis.resetViewBW();
        System.out.println("Analysing Completed");
        firstLayer.analysis.drawStaffsTrue();
        System.out.println("Staffs Drawn");
        System.out.println(firstLayer.analysis.staffs.size()+" Staffs");
        firstLayer.analysis.measureIdentification();
        firstLayer.analysis.drawMeasuresTrue();
    }//GEN-LAST:event_analyzeButtonActionPerformed

    private void extractCoorsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_extractCoorsButtonActionPerformed
        firstLayer.analysis.drawMatricesTrue();
        System.out.println("Matrices Drawn");
        firstLayer.analysis.createSubImages();
        System.out.println("SubImages Made\n");
    }//GEN-LAST:event_extractCoorsButtonActionPerformed

    private void SymbolTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SymbolTypeActionPerformed
        firstLayer.analysis.changeSymbol(SymbolType.getSelectedItem().toString());
        System.out.println("\nSymbol Changes");
    }//GEN-LAST:event_SymbolTypeActionPerformed

    private void recognizeButtonActionPerformed(java.awt.event.ActionEvent evt) {
        firstLayer.analysis.filterSubImgs();
        System.out.println("Notes Filtered");
        firstLayer.analysis.detectNotes();
        System.out.println("Notes Detected");
        firstLayer.analysis.addNotesToStaff();
        System.out.println("Notes Added To Staffs");
        //firstLayer.analysis.playStaffs();
    }

}
